function getCookie(name) {
    var cookieValue = null;
    if (document.cookie && document.cookie != '') {
        var cookies = document.cookie.split(';');
        for (var i = 0; i < cookies.length; i++) {
            var cookie = jQuery.trim(cookies[i]);
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) == (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
var csrftoken = getCookie('csrftoken');

function csrfSafeMethod(method) {
    // these HTTP methods do not require CSRF protection
    return (/^(GET|HEAD|OPTIONS|TRACE)$/.test(method));
}
function sameOrigin(url) {
    // test that a given url is a same-origin URL
    // url could be relative or scheme relative or absolute
    var host = document.location.host; // host + port
    var protocol = document.location.protocol;
    var sr_origin = '//' + host;
    var origin = protocol + sr_origin;
    // Allow absolute or scheme relative URLs to same origin
    return (url == origin || url.slice(0, origin.length + 1) == origin + '/') ||
        (url == sr_origin || url.slice(0, sr_origin.length + 1) == sr_origin + '/') ||
        // or any other URL that isn't scheme relative or absolute i.e relative.
        !(/^(\/\/|http:|https:).*/.test(url));
}


function getUserData() {
    $.getJSON("/traffic/id/1", {}, function(data) {
        document.body.innerHTML += data[0].fields.login;
    })
};

var btnErrorTimer;

function init() {
    var register = document.getElementById('form-btn-signup');
    // Подгружаем popover заранее
    var inputPopover = $("#btn-signin").popover({
        placement:"bottom",
        html:"true",
        content: function() {
            return $("#form-singin").html();
        }
    }, 'toggle');

    $("#btn-signin")[0].onclick = function() {
        // Жмякаем на Войти и поповер нормально работает
        inputPopover;

        if ( inputPopover[0].className === "btn-signin-pressed" ) {
            $("#btn-signin").removeClass("btn-signin-pressed");
        }
        else {
            $("#btn-signin").addClass("btn-signin-pressed");
        }
    }

    register.onclick = function() {
        if ( checkSignUpFields() ) {
            // предустановочки перед аяксом
            $.ajaxSetup({
                beforeSend: function(xhr, settings) {
                    if (!csrfSafeMethod(settings.type) && sameOrigin(settings.url)) {
                        xhr.setRequestHeader("X-CSRFToken", csrftoken);
                    }
                }
            });

            $.post('/registration/', {
                username:   $('#signup-username'   ).val(),
                password:   $('#signup-password'   ).val(),
                passwordrpt:$('#signup-passwordrpt').val()
            }).done(function(data) {
                console.log(data);
                if (data === 'errusername') {
                    //$("[data-toggle='popover']").popover({content:'Некорректный адрес электронной почты'}).popover('toggle');
                    setTimeout(function() {
                        //$("[data-toggle='popover']").popover('destroy');
                        //$(".popover")[0].remove();
                    }, 1200);
                };

                if (data === 'errpassword') {
                    //$("[data-toggle='popover']").popover({content:'Используйте цифры 0-9, буквы a-z, A-Z. Длина пароля больше 6 символов'}).popover('toggle');
                    setTimeout(function() {
                        //$("[data-toggle='popover']").popover('destroy');
                        //$(".popover")[0].remove();
                    }, 1200);
                };

                if (data === 'haveuser') {
                    //$("[data-toggle='popover']").popover({content:'Пользователь с такой электронной почтой уже есть'}).popover('toggle');
                    setTimeout(function() {
                        //$("[data-toggle='popover']").popover('destroy');
                        //$(".popover")[0].remove();
                    }, 1200);
                };

                if (data === 'created') {
                    window.location = "/";
                };

            });
        };
    };
};

function checkEmptyFields() {
    if ($('#signup-passwordrpt').val() == "") { return false; };
    if ($('#signup-password').val()    == "") { return false; };
    if ($('#signup-username').val()    == "") { return false; };

    return true;
};

// проверяет поля при регистрации
function checkSignUpFields() {
    clearTimeout(btnErrorTimer);
    btnErrorTimer = null;

    if (!checkEmptyFields()) {
        $('#form-btn-signup').addClass("form-btn-error");
        btnErrorTimer = setTimeout(function() {
            $('#form-btn-signup').removeClass("form-btn-error");
        }, 3000);
        return false;
    } else {
        // проверяем на стороне клиента, совпадают ли пароли
        if ( $('#signup-passwordrpt').val() !== $('#signup-password').val() ) {
            $('#form-btn-signup').addClass("form-btn-pass-not-match-error");

            btnErrorTimer = setTimeout(function() {
                $('#form-btn-signup').removeClass("form-btn-pass-not-match-error");
            }, 3000);

            return false;
        };

    };

    return true;
};

// проверяем на клиенте заполнены ли логин пароль
function checkSignInFields() {
    clearTimeout(btnErrorTimer);
    btnErrorTimer = null;

    if (($('#signin-password').val() == "") || ($('#signin-username').val() == "")) {
        $('#form-btn-signin').addClass("form-btn-error");

        btnErrorTimer = setTimeout(function() {
            $('#form-btn-signin').removeClass("form-btn-error");
        }, 3000 );

        return false;
    };
};

// юзается для ответов.
function destroyElement(e) {
    setTimeout(function() {
        $(e[0]).animate({
            opacity: 0,
        }, 500, function() {
            e[0].parentNode.removeChild(e[0]);
        })
    }, 2000);
};
